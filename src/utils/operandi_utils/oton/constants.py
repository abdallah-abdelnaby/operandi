from json import load
from os import environ
from pkg_resources import resource_filename
from operandi_utils.constants import OPERANDI_VERSION

OCRD_ALL_JSON_FILE = resource_filename(__name__, 'ocrd_all_tool.json')
with open(OCRD_ALL_JSON_FILE) as f:
    OCRD_ALL_JSON = load(f)

OTON_LOG_LEVEL = environ.get("OTON_LOG_LEVEL", "INFO")
OTON_LOG_FORMAT = '%(asctime)s %(levelname)s %(name)s:%(funcName)s: %(lineno)s: %(message)s'

PARAMS_KEY_INPUT_FILE_GRP: str = 'params.input_file_group'
PARAMS_KEY_METS_PATH: str = 'params.mets_path'
PARAMS_KEY_METS_SOCKET_PATH: str = 'params.mets_socket_path'
PARAMS_KEY_WORKSPACE_DIR: str = 'params.workspace_dir'
PARAMS_KEY_ENV_WRAPPER_CMD: str = 'params.env_wrapper_cmd'
PARAMS_KEY_PAGES: str = 'params.pages'
PARAMS_KEY_CPUS: str = 'params.cpus'
PARAMS_KEY_RAM: str = 'params.ram'
PARAMS_KEY_FORKS: str = 'params.forks'
PARAMS_KEY_CPUS_PER_FORK: str = 'params.cpus_per_fork'
PARAMS_KEY_RAM_PER_FORK: str = 'params.ram_per_fork'

REPR_INPUT_FILE_GRP: str = f"""{PARAMS_KEY_INPUT_FILE_GRP} = "null\""""
REPR_METS_PATH: str = f"""{PARAMS_KEY_METS_PATH} = "null\""""
REPR_METS_SOCKET_PATH: str = f"""{PARAMS_KEY_METS_SOCKET_PATH} = "null\""""
REPR_WORKSPACE_DIR: str = f"""{PARAMS_KEY_WORKSPACE_DIR} = "null\""""
REPR_ENV_WRAPPER_CMD: str = f"""{PARAMS_KEY_ENV_WRAPPER_CMD} = "null\""""
REPR_PAGES: str = f"""{PARAMS_KEY_PAGES} = "null\""""
REPR_CPUS: str = f"""{PARAMS_KEY_CPUS} = "null\""""
REPR_RAM: str = f"""{PARAMS_KEY_RAM} = "null\""""
REPR_FORKS: str = f"""{PARAMS_KEY_FORKS} = {PARAMS_KEY_CPUS}"""
REPR_FORKS_NULL: str = f"""{PARAMS_KEY_FORKS} = "4\""""
REPR_CPUS_PER_FORK: str = f"""{PARAMS_KEY_CPUS_PER_FORK} = ({PARAMS_KEY_CPUS}.toInteger() / {PARAMS_KEY_FORKS}.toInteger()).intValue()"""
REPR_RAM_PER_FORK: str = f"""{PARAMS_KEY_RAM_PER_FORK} = sprintf("%dGB", ({PARAMS_KEY_RAM}.toInteger() / {PARAMS_KEY_FORKS}.toInteger()).intValue())"""

DIR_IN: str = 'input_group'
DIR_OUT: str = 'output_group'
PAGE_RANGE: str = 'page_range'
METS_PATH: str = 'mets_path'
METS_SOCKET_PATH: str = 'mets_socket_path'
WORKSPACE_DIR: str = 'workspace_dir'

# Placeholders
BS: str = '{}'
PH_ENV_WRAPPER_CMD: str = f'${BS[0]}{PARAMS_KEY_ENV_WRAPPER_CMD}{BS[1]}'
PH_DIR_IN: str = f'${BS[0]}{DIR_IN}{BS[1]}'
PH_DIR_OUT: str = f'${BS[0]}{DIR_OUT}{BS[1]}'
PH_PAGE_RANGE: str = f'${BS[0]}{PAGE_RANGE}{BS[1]}'
PH_WORKSPACE_DIR: str = f'${BS[0]}{WORKSPACE_DIR}{BS[1]}'
PH_METS_PATH: str = f'${BS[0]}{METS_PATH}{BS[1]}'
PH_METS_SOCKET_PATH: str = f'${BS[0]}{METS_SOCKET_PATH}{BS[1]}'
PH_PARAMS_FORKS: str = f'${BS[0]}{PARAMS_KEY_FORKS}{BS[1]}'
PH_PARAMS_METS_PATH: str = f'${BS[0]}{PARAMS_KEY_METS_PATH}{BS[1]}'
PH_PARAMS_WORKSPACE_DIR: str = f'${BS[0]}{PARAMS_KEY_WORKSPACE_DIR}{BS[1]}'
SPACES = '    '

WORKFLOW_COMMENT = f"// This workflow was automatically generated by the v{OPERANDI_VERSION} operandi_utils.oton module"
